<?php
/**
 * User: execut
 * Date: 14.07.16
 * Time: 16:15
 */

namespace execut\yii\base\action\adapter;
use execut\TestCase;
use yii\db\ActiveRecord;
use yii\web\Response;
use yii\web\UploadedFile;

class FileTest extends TestCase
{
    public static $file;
    public function setUp()
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        self::$file = tempnam('/tmp', 'test');
        file_put_contents(self::$file, 'test');
    }

    public function tearDown()
    {
        parent::tearDown(); // TODO: Change the autogenerated stub
        unlink(self::$file);
    }

    public function testRenderFile() {
        $action = new File();
        $action->modelClass = FileTestModel::className();
        $action->setActionParams([
            'get' => [
                'r' => 'test',
                'name' => 'test',
            ],
        ]);
        $result = $action->run();
        $this->assertEquals([
            'name' => 'test',
        ], $action->model->findAttributes);
        $headers = \yii::$app->response->headers;
        $this->assertEquals('attachment; filename="test.txt"', $headers->get('content-disposition'));
        $this->assertEquals('text/plain', $headers->get('content-type'));
        $this->assertEquals(Response::FORMAT_RAW, $result->format);
        $this->assertEquals('test', $result->content);
    }
}

class FileTestModel extends ActiveRecord {
    public function __get($name) {
        switch ($name) {
            case 'name':
                return 'test.txt';
            break;
            case 'content':
                return fopen(FileTest::$file, 'r');
            break;
            case 'mime_type':
                return 'text/plain';
            break;
        }
    }

    public $findAttributes = [];
    public function byAttributes($attributes) {
        $this->findAttributes = $attributes;
        return $this;
    }

    public static function find() {
        return new self;
    }

    public function one() {
        return $this;
    }
}